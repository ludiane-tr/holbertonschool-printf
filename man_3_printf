.TH _PRINTF 3 "November 2024" "Holberton School Team Project" "User Commands"

.SH NAME
_printf \- Custom formatted output conversion.

.SH SYNOPSIS
.B #include "main.h"
.sp
.BI "int _printf(const char *" format ", ...);"

.SH DESCRIPTION
.B _printf
is a custom implementation of the standard 
.B printf
function. It produces output according to a specified format, as described below. The function writes to the standard output 
.B stdout.

.PP
The function 
.B _printf
returns the number of characters printed (excluding the null byte used to end output to strings).

.SH FORMAT
The format string is composed of zero or more directives. Ordinary characters (without a '%' before them) are copied unchanged to the output. Each directive consists of a '%' character, possibly followed by:
- A format flag,
- A width,
- A precision,
- A conversion specifier.

.PP
The supported conversion specifiers are:
.TP
.B %c
Prints a single character.
.TP
.B %s
Prints a string of characters.
.TP
.B %%
Prints a literal '%' character.
.TP
.B %d, %i
Prints an integer in base 10.

.SH RETURN VALUE
On success, the function returns the number of characters printed (excluding the null byte). If an output error occurs, a negative value is returned.

.SH FUNCTIONS
.TP
.B int _putchar(char c)
Writes the character 
.B c
to 
.B stdout.
Returns 1 on success and -1 on error.
.TP
.B int _char(va_list args)
Prints a character from the arguments list.
.TP
.B int _str(va_list args)
Prints a string from the arguments list.
.TP
.B int _percent(va_list args)
Prints a percent sign from the arguments list.
.TP
.B int _int(va_list args)
Prints an integer from the arguments list.
.TP
.B int _format(const char result,va_list args)
Selects the appropriate function based on the format specifier.

.SH EXAMPLES
.nf
#include "main.h"

int main(void) {
    _printf("Character: %c\\n", 'A');
    _printf("Percent: %%\\n");
    _printf("Integer: %d\\n", 123);
    return (0);
}
.fi

.SH AUTHOR
Written by Jordan BAROUX and Ludiane TROUILLEFOU.

.SH BUGS
No known bugs.
